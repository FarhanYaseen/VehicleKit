{"version":3,"sources":["components/Table.js","components/SearchBar.js","components/Loader.js","graphql/query/index.js","pages/bike.js","pages/bikes.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","CustomTable","props","bikes","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","align","TableBody","map","myKey","bike_id","lat","lon","is_disabled","is_reserved","vehicle_type","scope","to","SearchBar","history","useHistory","navigate","id","push","useState","search","setSearch","onSubmit","event","preventDefault","TextField","label","value","onChange","e","target","onKeyPress","ev","key","Button","style","margin","variant","display","marginTop","justifyContent","marginLeft","spacing","Loader","CircularProgress","getVehicleStatus","gql","getBikeById","Bike","match","params","useQuery","variables","data","bike","loading","error","Bikes","vehicleStatus","Pages","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bc3583c.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\nimport {\n  Table, TableBody, TableCell,\n  TableContainer, TableHead, TableRow, Paper,\n  makeStyles, withStyles\n} from '@material-ui/core';\n\nimport '../style.css'\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport default function CustomTable(props) {\n  const { bikes = [] } = props;\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper} >\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <StyledTableRow>\n            <StyledTableCell>ID</StyledTableCell>\n            <StyledTableCell align=\"right\">Latitude</StyledTableCell>\n            <StyledTableCell align=\"right\">Longitude</StyledTableCell>\n            <StyledTableCell align=\"right\">Reserved</StyledTableCell>\n            <StyledTableCell align=\"right\">Disabled</StyledTableCell>\n            <StyledTableCell align=\"right\">Type</StyledTableCell>\n          </StyledTableRow>\n        </TableHead>\n        <TableBody>\n          {bikes.map(({ bike_id, lat, lon, is_disabled, is_reserved, vehicle_type }, myKey) => (\n            <StyledTableRow key={bike_id}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <Link to={`/${bike_id}`} className=\"text-link\"> {bike_id}</Link>\n                </StyledTableCell>\n              <StyledTableCell align=\"right\">{lat}</StyledTableCell>\n              <StyledTableCell align=\"right\">{lon}</StyledTableCell>\n              <StyledTableCell align=\"right\">{is_reserved ? 'yes' : 'no'}</StyledTableCell>\n              <StyledTableCell align=\"right\">{is_disabled ? 'yes' : 'no'}</StyledTableCell>\n              <StyledTableCell align=\"right\">{vehicle_type}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer >\n  )\n}","import React, { useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { TextField, Button, } from '@material-ui/core';\n\nimport '../style.css'\n\nconst SearchBar = () => {\n  const history = useHistory();\n  const navigate = (id) => history.push(`/${id}`);\n  const [search, setSearch] = useState('');\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (search) navigate(search);\n  }\n  return (\n    <div className=\"container\">\n      <form\n        onSubmit={handleSubmit}\n        align='right'\n        className=\"container\" >\n        <TextField\n          id=\"standard-basic\"\n          label=\"Search By ID\"\n          value={search}\n          onChange={e => setSearch(e.target.value)}\n          onKeyPress={(ev) => {\n            if (ev.key === 'Enter') {\n              navigate(search);\n            }\n          }}\n        />\n        <label>\n          <Link to={`/${search}`}>\n            <Button\n              style={{\n                margin: '10px'\n              }}\n              variant=\"contained\" color=\"primary\">\n              Search\n          </Button>\n          </Link>\n        </label>\n        <label>\n          <Link to={`/`}>\n            <Button\n              variant=\"contained\" color=\"primary\">\n              Main Page\n          </Button>\n          </Link>\n        </label>\n      </form >\n    </div>\n  );\n}\nexport default SearchBar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginTop: '100px',\n    justifyContent: 'center',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function Loader() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}","import { gql } from '@apollo/client';\nexport const getVehicleStatus = gql`\n query getVehicleStatus {\n  vehicleStatus {\n      last_updated\n      ttl\n      data {\n        bikes {\n          bike_id\n          lat\n          lon\n          is_reserved\n          is_disabled\n          vehicle_type\n        }\n      }\n    }\n  }\n`;\n\nexport const getBikes = gql`\n  query GetBikes {\n    bikes {\n      bike_id\n      lat\n      lon\n      is_reserved\n      is_disabled\n      vehicle_type\n    }\n  }\n  `;\n\nexport const getBikeById = gql`\n  query GetBikeById ($id: ID!) {\n    bike (id: $id){\n      bike_id\n      lat\n      lon\n      is_reserved\n      is_disabled\n      vehicle_type\n    }\n  }\n`;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from '@apollo/client';\nimport { Button } from '@material-ui/core';\n\nimport Table from './../components/Table';\nimport SearchBar from '../components/SearchBar';\nimport Loader from '../components/Loader'\nimport { getBikeById } from '../graphql/query/index'\n\nimport '../style.css'\n\nexport default function Bike(props) {\n  const id = props.match.params.id;\n  const { data: { bike = {} } = {}, loading, error } = useQuery(getBikeById, { variables: { id } });\n\n  if (loading) return <Loader />;\n  if (error) return <div>An error occurred</div>;\n\n  if (!bike) return (\n    <div className=\"details\">\n      <p className=\"main\">No Record Found</p>\n      <Link to={`/`}>\n        <Button\n          variant=\"contained\" color=\"primary\">\n          Main Page\n          </Button>\n      </Link>\n    </div>\n  );\n\n  return (\n    <div className='container'>\n      <SearchBar />\n      <Table bikes={[bike]} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { getVehicleStatus } from '../graphql/query/index'\nimport Table from './../components/Table';\nimport SearchBar from '../components/SearchBar';\nimport Loader from '../components/Loader'\n\nimport '../style.css'\n\nexport default function Bikes() {\n  const { data, loading, error } = useQuery(getVehicleStatus);\n \n  if (loading) return <Loader />;\n  if (error) return <div>An error occurred</div>;\n\n  const { vehicleStatus : { data : { bikes }} } = data;\n  if (!bikes) return <div>No Record Found</div>;\n  return (\n    <div className='container'>\n      <SearchBar />\n      <Table bikes={bikes} />\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nimport Bike from './pages/bike';\nimport Bikes from './pages/bikes';\n\nexport default function Pages() {\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Bikes />\n          </Route>\n          <Route path=\"/:id\" component={Bike} />\n        </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}