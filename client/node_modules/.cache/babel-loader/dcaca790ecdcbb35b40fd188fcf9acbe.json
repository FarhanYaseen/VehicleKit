{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Farhan/Path/announceKit_Test/client/src/components/bike.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from '@apollo/client';\nimport { TextField, Button } from '@material-ui/core';\nimport '../style.css';\nimport Table from './Table';\nimport { getBikeById } from '../graphql/query/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Bike(props) {\n  _s();\n\n  const id = props.match.params.id;\n  const {\n    data: {\n      bike = {}\n    } = {},\n    loading,\n    error\n  } = useQuery(getBikeById, {\n    variables: {\n      id\n    }\n  }); // search field value\n\n  const [input, setInput] = useState('');\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"ERROR\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }, this); // if bike not exist, return the search bar without data showing 'bike not found' reminder\n\n  if (!bike) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic-1\",\n        label: \"bike not found\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contained-button-file\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${input}`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"Search by Bike id\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contained-button-file\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${input}`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bikes: [bike]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Bike, \"4SlIvFo+WcNydtkQ/EbXQkcwRAQ=\", false, function () {\n  return [useQuery];\n});\n\n_c = Bike;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bike\");","map":{"version":3,"sources":["/Users/admin/Documents/Farhan/Path/announceKit_Test/client/src/components/bike.js"],"names":["React","useState","Link","useQuery","TextField","Button","Table","getBikeById","Bike","props","id","match","params","data","bike","loading","error","variables","input","setInput","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AAEA,OAAO,cAAP;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAClC,QAAMC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAEA,QAAM;AAAEG,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,GAAG;AAAT,QAAgB,EAAxB;AAA4BC,IAAAA,OAA5B;AAAqCC,IAAAA;AAArC,MAA+Cb,QAAQ,CAACI,WAAD,EAAc;AAAEU,IAAAA,SAAS,EAAE;AAAEP,MAAAA;AAAF;AAAb,GAAd,CAA7D,CAHkC,CAKlC;;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAIc,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CATuB,CAUlC;;AACA,MAAI,CAACF,IAAL,EAAW,oBACT;AAAA,2BACE;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,YAAY,EAAC,KAA9B;AAAoC,MAAA,KAAK,EAAC,QAA1C;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,KAAK,EAAC,gBAFR;AAGE,QAAA,KAAK,EAAEI,KAHT;AAIE,QAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAO,QAAA,OAAO,EAAC,uBAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,IAAGJ,KAAM,EAApB;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADS;AAoBX,sBACE;AAAA,4BACE;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,YAAY,EAAC,KAA9B;AAAoC,MAAA,KAAK,EAAC,QAA1C;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,gBADL;AAEE,QAAA,KAAK,EAAC,mBAFR;AAGE,QAAA,KAAK,EAAEA,KAHT;AAIE,QAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAJzB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAO,QAAA,OAAO,EAAC,uBAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,IAAGJ,KAAM,EAApB;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAACJ,IAAD;AAAd;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAnDuBN,I;UAG+BL,Q;;;KAH/BK,I","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from '@apollo/client';\n\nimport { TextField, Button } from '@material-ui/core';\n\nimport '../style.css'\n\nimport Table from './Table';\nimport { getBikeById } from '../graphql/query/index'\n\nexport default function Bike(props) {\n  const id = props.match.params.id;\n\n  const { data: { bike = {} } = {}, loading, error } = useQuery(getBikeById, { variables: { id } });\n\n  // search field value\n  const [input, setInput] = useState('');\n\n  if (loading) return <p>Loading</p>;\n  if (error) return <p>ERROR</p>;\n  // if bike not exist, return the search bar without data showing 'bike not found' reminder\n  if (!bike) return (\n    <div>\n      <form noValidate autoComplete=\"off\" align='center'>\n        <TextField\n          id=\"standard-basic-1\"\n          label='bike not found'\n          value={input}\n          onChange={e => setInput(e.target.value)}\n        />\n        <label htmlFor=\"contained-button-file\">\n          <Link to={`/${input}`}>\n            <Button variant=\"contained\" color=\"primary\">\n              Search\n            </Button>\n          </Link>\n        </label>\n      </form >\n    </div>\n  );\n\n  return (\n    <div>\n      <form noValidate autoComplete=\"off\" align='center'>\n        <TextField\n          id=\"standard-basic\"\n          label=\"Search by Bike id\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n        />\n        <label htmlFor=\"contained-button-file\">\n          <Link to={`/${input}`}>\n            <Button variant=\"contained\" color=\"primary\">\n              Search\n            </Button>\n          </Link>\n        </label>\n      </form >\n      <Table bikes={[bike]} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}